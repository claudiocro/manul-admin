{"version":3,"sources":["../src/create_admin_context.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;8BACI,kBAAkB;;;;gCACrB,qBAAqB;;;;sCACf,2BAA2B;;;;qBAGzC,UAAC,IAaf,EAAK;;;AAXJ,QAAM,GAFQ,IAaf,CAXC,MAAM;MACN,eAAe,GAHD,IAaf,CAVC,eAAe;MACf,MAAM,GAJQ,IAaf,CATC,MAAM;MAEN,MAAM,GANQ,IAaf,CAPC,MAAM;;AACN,aAAW,GAPG,IAaf,CANC,WAAW;;AACX,YAAU,GARI,IAaf,CALC,UAAU;uBARI,IAaf,CAHC,SAAS;;;AAAT,WAAS,kCAAG,UAAA,SAAS;WAAI,MAAM,CAAC,KAAK,2EAAyE,SAAS,CAAG;GAAA;;AAI1H,MAAM,oBAAoB,GAAG,CAAC,MAAM,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;AAC/D,MAAI,oBAAE,IAAI,CAAC,oBAAoB,EAAE,oBAAE,KAAK,CAAC,EAAE;AACzC,UAAM,IAAI,KAAK,CAAC,qDAAqD,EAAE,oBAAoB,CAAC,CAAC;GAC9F;AACD,MAAM,OAAO,GAAG,iCAAc,EAAE,MAAM,EAAN,MAAM,EAAE,eAAe,EAAf,eAAe,EAAE,MAAM,EAAN,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3E,MAAM,YAAY,GAAG,SAAf,YAAY,CAAI,KAAwB,EAAK;QAA3B,cAAc,GAAhB,KAAwB,CAAtB,cAAc;QAAE,IAAI,GAAtB,KAAwB,CAAN,IAAI;;AAC1C,QAAI,SAAS,GAAG,IAAI,CAAC;AACrB,QAAI,oBAAE,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;AAClC,eAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;KAC9B,MAAM,IAAI,oBAAE,GAAG,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,EAAE;AACpD,eAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC;KAC9C,MAAM;AACL,eAAS,GAAG,UAAU,CAAC,IAAI,CAAC,WAAQ,CAAC;KACtC;AACD,aAAS,CAAC,WAAW,cAAY,cAAc,SAAI,IAAI,AAAE,CAAC;AAC1D,WAAO,SAAS,CAAC;GAClB,CAAC;AACF,SAAO;AACL,WAAO,EAAP,OAAO;AACP,gBAAY,EAAZ,YAAY;AACZ,UAAM,EAAN,MAAM;AACN,eAAW,EAAX,WAAW;AACX,aAAS,EAAT,SAAS;AACT,cAAU,EAAV,UAAU;AACV,cAAU,+BAAA;AACV,oBAAgB,qCAAA;GACjB,CAAC;CACH","file":"create_admin_context.js","sourcesContent":["import _ from 'lodash';\nimport createMethods from './create_methods';\nimport routeUtils from './utils/route_utils';\nimport publicationUtils from './utils/publication_utils';\n\n\nexport default ({\n  // needed meteor dependencies\n  Meteor,\n  ValidatedMethod,\n  Counts,\n\n  config,  // admin config\n  adminRoutes, // FlowRouter, manulRouter compatible routes\n  components, // component definition, see readme\n  /* eslint no-alert: 0*/\n  gotoRoute = routeName => window.alert(`please provide a gotoRoute-function in adminContext that can jump to ${routeName}`),\n\n\n}) => {\n  const neededMeteorPackages = [Meteor, ValidatedMethod, Counts];\n  if (_.some(neededMeteorPackages, _.isNil)) {\n    throw new Error('please provide all of the following meteor-packages', neededMeteorPackages);\n  }\n  const methods = createMethods({ Meteor, ValidatedMethod, Counts }, config);\n  const getComponent = ({ collectionName, type }) => {\n    let Component = null;\n    if (_.isFunction(components[type])) {\n      Component = components[type];\n    } else if (_.has(components, [type, collectionName])) {\n      Component = components[type][collectionName];\n    } else {\n      Component = components[type].default;\n    }\n    Component.displayName = `Admin_${collectionName}_${type}`;\n    return Component;\n  };\n  return {\n    methods,\n    getComponent,\n    config,\n    adminRoutes,\n    gotoRoute,\n    components,\n    routeUtils,\n    publicationUtils,\n  };\n};\n"]}