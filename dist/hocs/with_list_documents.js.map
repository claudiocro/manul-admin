{"version":3,"sources":["../../src/hocs/with_list_documents.js"],"names":["composer","onData","context","publications","collection","collectionName","searchFields","sortCursor","filterProps","filter","sortPropertiesProps","sortProperties","searchTermProps","searchTerm","pagePropertiesProps","pageProperties","adminContext","Meteor","LocalState","Counts","get","docsLoaded","subscribe","list","ready","query","docs","find","fetch","recordCount","counts"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;;;AAGO,IAAMA,8BAAW,SAAXA,QAAW;AAAA,SAAM,gBAYzBC,MAZyB,EAazB;AAAA,QAXDC,OAWC,QAXDA,OAWC;AAAA,QAVDC,YAUC,QAVDA,YAUC;AAAA,QATDC,UASC,QATDA,UASC;AAAA,QARDC,cAQC,QARDA,cAQC;AAAA,QAPDC,YAOC,QAPDA,YAOC;AAAA,+BANDC,UAMC;AAAA,QANDA,UAMC,mCANY,KAMZ;AAAA,QALOC,WAKP,QALDC,MAKC;AAAA,QAJeC,mBAIf,QAJDC,cAIC;AAAA,QAHWC,eAGX,QAHDC,UAGC;AAAA,QAFeC,mBAEf,QAFDC,cAEC;;AAAA,mBACsDb,SADtD;AAAA,yCACKc,YADL;AAAA,QACqBC,MADrB,yBACqBA,MADrB;AAAA,QAC6BC,UAD7B,yBAC6BA,UAD7B;AAAA,QACyCC,MADzC,yBACyCA,MADzC;;AAEH,QAAMV,SAASD,eAAeU,WAAWE,GAAX,CAAe,wCAAgBf,cAAhB,CAAf,CAA9B;AACA,QAAMM,iBAAiBD,uBAAuBQ,WAAWE,GAAX,CAAe,sCAAcf,cAAd,CAAf,CAA9C;AACA,QAAMQ,aAAaD,mBAAmBM,WAAWE,GAAX,CAAe,wCAAgBf,cAAhB,CAAf,CAAtC;AACA,QAAMU,iBAAiBD,uBAAuBI,WAAWE,GAAX,CAAe,4CAAoBf,cAApB,CAAf,CAA9C;AACA,QAAMgB,aAAaJ,OAAOK,SAAP,CAAiBnB,aAAaoB,IAA9B,EAAoCd,MAApC,EAA4Ce,KAA5C,EAAnB;AACA,QAAMC,QAAQ,gCAAchB,MAAd,EAAsB,EAAEI,sBAAF,EAAcP,0BAAd,EAAtB,CAAd;AACA,QAAMoB,OAAOtB,WAAWuB,IAAX,CACXF,KADW,6BAELlB,cAAc,4CAA0B,EAAEI,8BAAF,EAAkBI,8BAAlB,EAA1B,CAFT,GAGXa,KAHW,EAAb;AAIA,QAAMC,cAAcV,OAAOC,GAAP,CAAWjB,aAAa2B,MAAxB,CAApB;AACA7B,WAAO,IAAP,EACE,EAAEoB,sBAAF,EAAcK,UAAd,EAAoBjB,cAApB,EAA4BI,sBAA5B,EAAwCF,8BAAxC,EAAwDI,8BAAxD,EAAwEc,wBAAxE,EADF;AAGD,GA7BuB;AAAA,CAAjB;;kBAgCQ;AAAA,SAAM,oCAAmB7B,UAAnB,CAAN;AAAA,C","file":"with_list_documents.js","sourcesContent":["\nimport { composeWithTracker } from 'mantra-core';\nimport { filterToQuery, gridOptionsToQueryOptions } from '../utils/query_utils';\nimport { stateListFilter, stateListSort, statePageProperties, stateListSearch } from '../utils/local_state_utils';\n\n\nexport const composer = () => (\n  {\n    context,\n    publications,\n    collection,\n    collectionName,\n    searchFields,\n    sortCursor = false,\n    filter: filterProps,\n    sortProperties: sortPropertiesProps,\n    searchTerm: searchTermProps,\n    pageProperties: pagePropertiesProps,\n  }, onData,\n) => {\n  const { adminContext: { Meteor, LocalState, Counts } } = context();\n  const filter = filterProps || LocalState.get(stateListFilter(collectionName));\n  const sortProperties = sortPropertiesProps || LocalState.get(stateListSort(collectionName));\n  const searchTerm = searchTermProps || LocalState.get(stateListSearch(collectionName));\n  const pageProperties = pagePropertiesProps || LocalState.get(statePageProperties(collectionName));\n  const docsLoaded = Meteor.subscribe(publications.list, filter).ready();\n  const query = filterToQuery(filter, { searchTerm, searchFields });\n  const docs = collection.find(\n    query,\n    { ...(sortCursor && gridOptionsToQueryOptions({ sortProperties, pageProperties })) },\n  ).fetch();\n  const recordCount = Counts.get(publications.counts);\n  onData(null,\n    { docsLoaded, docs, filter, searchTerm, sortProperties, pageProperties, recordCount },\n  );\n};\n\n\nexport default () => composeWithTracker(composer());\n"]}