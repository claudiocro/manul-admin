{"version":3,"sources":["../../src/hocs/with_list_documents.js"],"names":[],"mappings":";;;;;;0BACmC,aAAa;;gCACS,sBAAsB;;sCACX,4BAA4B;;AAGzF,IAAM,QAAQ,GAAG,SAAX,QAAQ;SAAS,UAAC,IAAqD,EAAE,MAAM,EAAK;QAAhE,OAAO,GAAT,IAAqD,CAAnD,OAAO;QAAE,YAAY,GAAvB,IAAqD,CAA1C,YAAY;QAAE,UAAU,GAAnC,IAAqD,CAA5B,UAAU;QAAE,cAAc,GAAnD,IAAqD,CAAhB,cAAc;;mBACvB,OAAO,EAAE;;yCAA1D,YAAY;QAAI,MAAM,yBAAN,MAAM;QAAE,UAAU,yBAAV,UAAU;QAAE,MAAM,yBAAN,MAAM;;AAClD,QAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,6CAAgB,cAAc,CAAC,CAAC,CAAC;AAC/D,QAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,2CAAc,cAAc,CAAC,CAAC,CAAC;AACrE,QAAM,cAAc,GAAG,UAAU,CAAC,GAAG,CAAC,iDAAoB,cAAc,CAAC,CAAC,CAAC;AAC3E,QAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;AACvE,QAAM,KAAK,GAAG,qCAAc,MAAM,CAAC,CAAC;AACpC,QAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAC1B,KAAK,EACL,iDAA0B,EAAE,cAAc,EAAd,cAAc,EAAE,cAAc,EAAd,cAAc,EAAE,CAAC,CAC9D,CAAC,KAAK,EAAE,CAAC;AACV,QAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACpD,UAAM,CAAC,IAAI,EAAE,EAAE,UAAU,EAAV,UAAU,EAAE,IAAI,EAAJ,IAAI,EAAE,MAAM,EAAN,MAAM,EAAE,cAAc,EAAd,cAAc,EAAE,cAAc,EAAd,cAAc,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;GACzF;CAAA,CAAC;;;;qBAGa;SAAM,oCAAmB,QAAQ,EAAE,CAAC;CAAA","file":"with_list_documents.js","sourcesContent":["\nimport { composeWithTracker } from 'mantra-core';\nimport { filterToQuery, gridOptionsToQueryOptions } from '../utils/query_utils';\nimport { stateListFilter, stateListSort, statePageProperties } from '../utils/local_state_utils';\n\n\nexport const composer = () => ({ context, publications, collection, collectionName }, onData) => {\n  const { adminContext: { Meteor, LocalState, Counts } } = context();\n  const filter = LocalState.get(stateListFilter(collectionName));\n  const sortProperties = LocalState.get(stateListSort(collectionName));\n  const pageProperties = LocalState.get(statePageProperties(collectionName));\n  const docsLoaded = Meteor.subscribe(publications.list, filter).ready();\n  const query = filterToQuery(filter);\n  const docs = collection.find(\n    query,\n    gridOptionsToQueryOptions({ sortProperties, pageProperties }),\n  ).fetch();\n  const recordCount = Counts.get(publications.counts);\n  onData(null, { docsLoaded, docs, filter, sortProperties, pageProperties, recordCount });\n};\n\n\nexport default () => composeWithTracker(composer());\n"]}