{"version":3,"sources":["../src/init_admin_server.js"],"names":["config","Meteor","ValidatedMethod","Counts","SimpleSchema","isAllowed","collections","createPublication","name","getPublications","list","edit","counts","collection","publish","publishList","filter","userId","query","find","publishEdit","_id","createPublications","Object","keys","forEach"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;kBACe,gBAA2DA,MAA3D,EAAsE;AAAA,MAAnEC,MAAmE,QAAnEA,MAAmE;AAAA,MAA3DC,eAA2D,QAA3DA,eAA2D;AAAA,MAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,+BAAlCC,YAAkC;AAAA,MAAlCA,YAAkC,qCAAnB,IAAmB;;AACnF,MAAMC,YAAY,0BAAUL,MAAV,CAAlB;AADmF,MAE3EM,WAF2E,GAE3DN,MAF2D,CAE3EM,WAF2E;;;AAInF,MAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAAA,gCACH,4BAAiBC,eAAjB,CAAiCD,IAAjC,CADG;AAAA,QAC1BE,IAD0B,yBAC1BA,IAD0B;AAAA,QACpBC,IADoB,yBACpBA,IADoB;AAAA,QACdC,MADc,yBACdA,MADc;;AAAA,QAE1BC,UAF0B,GAEXP,YAAYE,IAAZ,CAFW,CAE1BK,UAF0B;;AAIlC;;AACAZ,WAAOa,OAAP,CAAeJ,IAAf,EAAqB,SAASK,WAAT,CAAqBC,MAArB,EAA6B;AAChD,UAAIX,UAAUG,IAAV,EAAgB,KAAKS,MAArB,CAAJ,EAAkC;AAChC,YAAMC,QAAQ,gCAAcF,MAAd,CAAd;AACA;AACAb,eAAOW,OAAP,CAAe,IAAf,EAAqBF,MAArB,EAA6BC,WAAWM,IAAX,CAAgBD,KAAhB,CAA7B;AACA,eAAOL,WAAWM,IAAX,CAAgBD,KAAhB,CAAP;AACD;AACF,KAPD;AAQAjB,WAAOa,OAAP,CAAeH,IAAf,EAAqB,SAASS,WAAT,CAAqBC,GAArB,EAA0B;AAC7C,UAAIhB,UAAUG,IAAV,EAAgB,KAAKS,MAArB,CAAJ,EAAkC;AAChC,eAAOJ,WAAWM,IAAX,CAAgBE,GAAhB,CAAP;AACD;AACF,KAJD;AAKD,GAlBD;AAmBA,MAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/BC,WAAOC,IAAP,CAAYlB,WAAZ,EAAyBmB,OAAzB,CAAiClB,iBAAjC;AACD,GAFD;AAGAe;AACA,gCAAc,EAAErB,cAAF,EAAUC,gCAAV,EAA2BE,0BAA3B,EAAd,EAAyDJ,MAAzD;AACD,C","file":"init_admin_server.js","sourcesContent":["\nimport publicationUtils from './utils/publication_utils';\nimport createMethods from './create_methods';\nimport IsAllowed from './is_allowed';\nimport { filterToQuery } from './utils/query_utils';\n\n// SimpleSchema needs only to be passed, if its not in npm (version 2)\nexport default ({ Meteor, ValidatedMethod, Counts, SimpleSchema = null }, config) => {\n  const isAllowed = IsAllowed(config);\n  const { collections } = config;\n\n  const createPublication = (name) => {\n    const { list, edit, counts } = publicationUtils.getPublications(name);\n    const { collection } = collections[name];\n\n    /* eslint meteor/audit-argument-checks: 0*/\n    Meteor.publish(list, function publishList(filter) {\n      if (isAllowed(name, this.userId)) {\n        const query = filterToQuery(filter);\n        // counts is always without limiting\n        Counts.publish(this, counts, collection.find(query));\n        return collection.find(query);\n      }\n    });\n    Meteor.publish(edit, function publishEdit(_id) {\n      if (isAllowed(name, this.userId)) {\n        return collection.find(_id);\n      }\n    });\n  };\n  const createPublications = () => {\n    Object.keys(collections).forEach(createPublication);\n  };\n  createPublications();\n  createMethods({ Meteor, ValidatedMethod, SimpleSchema }, config);\n};\n"]}