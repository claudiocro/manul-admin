{"version":3,"sources":["../src/init_admin_server.js"],"names":[],"mappings":";;;;;;;;;;sCAC6B,2BAA2B;;;;8BAC9B,kBAAkB;;;;0BACtB,cAAc;;;;gCACN,qBAAqB;;;;qBAGpC,UAAC,IAAwD,EAAE,MAAM,EAAK;MAAnE,MAAM,GAAR,IAAwD,CAAtD,MAAM;MAAE,eAAe,GAAzB,IAAwD,CAA9C,eAAe;MAAE,MAAM,GAAjC,IAAwD,CAA7B,MAAM;0BAAjC,IAAwD,CAArB,YAAY;MAAZ,YAAY,qCAAG,IAAI;;AACpE,MAAM,SAAS,GAAG,6BAAU,MAAM,CAAC,CAAC;MAC5B,WAAW,GAAK,MAAM,CAAtB,WAAW;;AAEnB,MAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,IAAI,EAAK;4CACH,oCAAiB,eAAe,CAAC,IAAI,CAAC;;QAA7D,IAAI,qCAAJ,IAAI;QAAE,IAAI,qCAAJ,IAAI;QAAE,MAAM,qCAAN,MAAM;QAClB,UAAU,GAAK,WAAW,CAAC,IAAI,CAAC,CAAhC,UAAU;;;AAGlB,UAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE;AAChD,UAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AAChC,YAAM,KAAK,GAAG,qCAAc,MAAM,CAAC,CAAC;;AAEpC,cAAM,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,eAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC/B;KACF,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,WAAW,CAAC,GAAG,EAAE;AAC7C,UAAI,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AAChC,eAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OAC7B;KACF,CAAC,CAAC;GACJ,CAAC;AACF,MAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,iBAAY,WAAW,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;GACrD,CAAC;AACF,oBAAkB,EAAE,CAAC;AACrB,mCAAc,EAAE,MAAM,EAAN,MAAM,EAAE,eAAe,EAAf,eAAe,EAAE,YAAY,EAAZ,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;CAClE","file":"init_admin_server.js","sourcesContent":["\nimport publicationUtils from './utils/publication_utils';\nimport createMethods from './create_methods';\nimport IsAllowed from './is_allowed';\nimport { filterToQuery } from './utils/query_utils';\n\n// SimpleSchema needs only to be passed, if its not in npm (version 2)\nexport default ({ Meteor, ValidatedMethod, Counts, SimpleSchema = null }, config) => {\n  const isAllowed = IsAllowed(config);\n  const { collections } = config;\n\n  const createPublication = (name) => {\n    const { list, edit, counts } = publicationUtils.getPublications(name);\n    const { collection } = collections[name];\n\n    /* eslint meteor/audit-argument-checks: 0*/\n    Meteor.publish(list, function publishList(filter) {\n      if (isAllowed(name, this.userId)) {\n        const query = filterToQuery(filter);\n        // counts is always without limiting\n        Counts.publish(this, counts, collection.find(query));\n        return collection.find(query);\n      }\n    });\n    Meteor.publish(edit, function publishEdit(_id) {\n      if (isAllowed(name, this.userId)) {\n        return collection.find(_id);\n      }\n    });\n  };\n  const createPublications = () => {\n    Object.keys(collections).forEach(createPublication);\n  };\n  createPublications();\n  createMethods({ Meteor, ValidatedMethod, SimpleSchema }, config);\n};\n"]}