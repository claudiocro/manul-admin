{"version":3,"sources":["../../src/utils/csv.js"],"names":[],"mappings":";;;;;;;;;;;;sBAAc,QAAQ;;;;yBACL,WAAW;;;;yBACL,YAAY;;;;;;;;;;;;;;AAcnC,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,IAUnB,EAAK;MATL,QAAQ,GADW,IAUnB,CATA,QAAQ;MACR,IAAI,GAFe,IAUnB,CARA,IAAI;MACJ,YAAY,GAHO,IAUnB,CAPA,YAAY;MACZ,IAAI,GAJe,IAUnB,CANA,IAAI;oBAJe,IAUnB,CALA,MAAM;MAAN,MAAM,+BAAG,KAAK;uBALK,IAUnB,CAJA,SAAS;MAAT,SAAS,kCAAG,GAAG;oBANI,IAUnB,CAHA,MAAM;MAAN,MAAM,+BAAG,IAAI;uBAPM,IAUnB,CAFA,SAAS;MAAT,SAAS,kCAAG,MAAM;;MACf,eAAe,4BATC,IAUnB;;;;;AAIA,MAAM,QAAQ,GAAG,oBAAE,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC;WAAM,SAAS;GAAA,CAAC,CAAC,CAAC;AAC9D,MAAM,OAAO,GAAG,YAAY,IAAI,IAAI,CAAC;AACrC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAA,KAAK;WAAK,oBAAE,MAAM,cAAM,QAAQ,EAAK,KAAK,EAAG;GAAC,CAAC,CAAC;AAC5E,MAAM,WAAW,cAAK,SAAS,EAAT,SAAS,EAAE,MAAM,EAAN,MAAM,IAAK,eAAe,CAAE,CAAC;AAC9D,MAAM,GAAG,GAAG,uBAAK,OAAO,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,WAAW,CAAC,CAAC;AAC7E,yBAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,EAAK,QAAQ,WAAQ,MAAM,CAAC,CAAC;CACjG,CAAC;;qBAEa,EAAE,WAAW,EAAX,WAAW,EAAE","file":"csv.js","sourcesContent":["import _ from 'lodash';\nimport Papa from 'papaparse';\nimport { saveAs } from 'file-saver';\n\n/**\ncreate a csv-file in the browser from the given data\n\ndata: Array of documents\nkeys: all keys of every document that should be included\nfilename: the filename of the resulting csv-file\ncolumnTitles: the column titles on the first row\nuseBom: whether to include a UTF-16 byte order mark\ndelimiter: the delimiter for the csv\nquotes: whether to add quotes around fields\nany additional property will be passed to papaparse, see http://papaparse.com/docs#json-to-csv\n**/\nconst exportAsCsv = ({\n  filename,\n  keys,\n  columnTitles,\n  data,\n  useBom = false,\n  delimiter = ';',\n  quotes = true,\n  nullValue = 'NULL',\n  ...additionalProps\n }) => {\n  // we encode missing values with \"NULL\"\n  // because CSV has no concept of null/missing values\n  // good read: http://www.garretwilson.com/blog/2009/04/23/csvnull.xhtml\n  const defaults = _.zipObject(keys, keys.map(() => nullValue));\n  const columns = columnTitles || keys;\n  const dataPadded = data.map(entry => (_.values({ ...defaults, ...entry })));\n  const papaOptions = { delimiter, quotes, ...additionalProps };\n  const csv = Papa.unparse({ fields: columns, data: dataPadded }, papaOptions);\n  saveAs(new window.Blob([csv], { type: 'text/plain;charset=utf-8' }), `${filename}.csv`, useBom);\n};\n\nexport default { exportAsCsv };\n"]}