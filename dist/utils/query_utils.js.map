{"version":3,"sources":["../../src/utils/query_utils.js"],"names":["removeEmptyObjects","o","filterToQuery","filter","query","sortPropsToMongoSort","sortAscending","pagePropertiesToLimitAndSkip","currentPage","pageSize","limit","skip","gridOptionsToQueryOptions","sortProperties","pageProperties","sort","limitAndSkip"],"mappings":";;;;;;;;;;;;;AAAuB;;;;AAEvB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,qBAAqB,sBAAO;AAAA,SAAK,wBAASC,CAAT,KAAe,uBAAQA,CAAR,CAApB;AAAA,CAAP,CAA3B;;AAGA;AACO,IAAMC,wCAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAAY;AACvC;AACA;;AAEA,MAAI,uBAAUA,MAAV,CAAJ,EAAuB;AACrB,WAAO,EAAP;AACD;;AAED,MAAMC,QAAQJ,mBAAmBG,MAAnB,CAAd;AACA;AACA,SAAOC,KAAP;AACD,CAXM;;AAaP,IAAMC,uBAAuB,oBAC3B,qBAAM,IAAN,CAD2B,EAE3B,yBAAU;AAAA,MAAGC,aAAH,QAAGA,aAAH;AAAA,SAAwBA,gBAAgB,CAAhB,GAAoB,CAAC,CAA7C;AAAA,CAAV,CAF2B,CAA7B;;AAKA,IAAMC,+BAA+B,SAA/BA,4BAA+B;AAAA,kFACP,EAAEC,aAAa,CAAf,EAAkBC,UAAU,EAA5B,EADO;AAAA,MACjCD,WADiC,SACjCA,WADiC;AAAA,MACpBC,QADoB,SACpBA,QADoB;;AAAA,SAE/B;AACJC,WAAOD,QADH;AAEJE,UAAM,CAACH,cAAc,CAAf,IAAoBC;AAFtB,GAF+B;AAAA,CAArC;AAMO,IAAMG,gEAA4B,SAA5BA,yBAA4B,QAAwC;AAAA,MAArCC,cAAqC,SAArCA,cAAqC;AAAA,MAArBC,cAAqB,SAArBA,cAAqB;;AAC/E;AACA,MAAMC,OAAOV,qBAAqBQ,cAArB,CAAb;AACA;AACA,MAAMG,eAAeT,6BAA6BO,cAA7B,CAArB;AACA;AACEC;AADF,KAEKC,YAFL;AAID,CATM","file":"query_utils.js","sourcesContent":["import _ from 'lodash';import omitBy from 'lodash/fp/omitBy';\n\nimport isObject from 'lodash/fp/isObject';\nimport mapValues from 'lodash/fp/mapValues';\nimport keyBy from 'lodash/fp/keyBy';\nimport isEmpty from 'lodash/fp/isEmpty';\nimport flow from 'lodash/fp/flow';\n\nconst removeEmptyObjects = omitBy(o => isObject(o) && isEmpty(o));\n\n\n/* eslint import/prefer-default-export: 0 */\nexport const filterToQuery = (filter) => {\n  // console.log('got filter', filter);\n  // remove empty objects on filter\n\n  if (_.isEmpty(filter)) {\n    return {};\n  }\n\n  const query = removeEmptyObjects(filter);\n  // console.log('query is', query);\n  return query;\n};\n\nconst sortPropsToMongoSort = flow(\n  keyBy('id'),\n  mapValues(({ sortAscending }) => (sortAscending ? 1 : -1)),\n);\n\nconst pagePropertiesToLimitAndSkip = (\n  { currentPage, pageSize } = { currentPage: 1, pageSize: 10 },\n) => ({\n  limit: pageSize,\n  skip: (currentPage - 1) * pageSize,\n});\nexport const gridOptionsToQueryOptions = ({ sortProperties, pageProperties }) => {\n  // console.log('got sortProperties', sortProperties);\n  const sort = sortPropsToMongoSort(sortProperties);\n  // console.log('mongo sort', sort);\n  const limitAndSkip = pagePropertiesToLimitAndSkip(pageProperties);\n  return {\n    sort,\n    ...limitAndSkip,\n  };\n};\n"]}